class AbstractComponent{constructor({mode:t="default",root:s=this,subscribers:e=[],subscribes:i=[]}){if(this.constructor===AbstractComponent)throw"Attempt to create instance of abstract class";this.subscribers=e,this.subscribes=i,this.state={mode:t},this.root=s}_bind(t){try{this.self=t,this.state.name=this.self.dataset.el.split(".").splice(-1)[0],delete this._bind}catch{throw`BindError: 
				component self not given to 
				initialization of ${this.constructor.name} 
				for ${this.root.constructor.name}
			`}}take(t){}notify(s){this.subscribers.forEach(t=>{t.take(s)})}subscribe(t){this.subscribes.push(t),t.subscribers.push(this)}}class Component extends AbstractComponent{getByState(t){return t?this.findAll(`[data-state="${t}"]`):this.findAll("[data-state]")}ioByState(t){this.isRoot&&(this.getByState().forEach(t=>{t.classList.add("d-none")}),this.getByState(t).forEach(t=>{t.classList.remove("d-none")}))}get isRoot(){if(this.root==this)return!0}set mode(t){return this.ioByState(t),this.take(t),this.state.mode=t,this.notify(t),this.state.mode}set blocked(t){t?(this.state.blocked=!0,this.self.classList.add("blocked")):(this.state.blocked=!1,this.self.classList.remove("blocked"))}addChild(t,s){return this[s]=new t({self:this.get(s),root:this.root}),this[s]}getAll(t){return this.findAll(`[data-el${t?"~":"*"}="${this.state.name}.${t||""}"]`)}get(t){return this.getAll(t)[0]}findAll(t){return this.self.querySelectorAll(t)}find(t){return this.findAll(t)[0]}}class Edge extends AbstractComponent{constructor({self:t,mode:s,root:e,subscribers:i}){super({mode:s,root:e,subscribers:i}),this._bind(t)}}class StaticComponent extends Component{constructor({self:t,mode:s,root:e,subscribers:i}){super({mode:s,root:e,subscribers:i}),this._bind(t),this.ioByState(this.state.mode)}}class DynamicComponent extends Component{constructor({mode:t,root:s,subscribers:e,self:i,name:r,tag:o,template:a,classes:n=[]}){super({root:s,mode:t,subscribers:e}),i?this._bind(i):this.create({name:r,tag:o,classes:n,template:a})}create({name:t,tag:s="div",classes:e,template:i}){let r=document.createElement(s);r.innerHTML=""+i,this.isRoot?r.dataset.el=""+t:r.dataset.el=this.root.state.name+"."+t,e.forEach(t=>{r.classList.add(t)}),this.self=r,this.state.name=t}remove(){this.self.remove()}}class StaticTable extends StaticComponent{constructor({self:t,mode:s,root:e,subscribers:i}){super({self:t,mode:s,root:e,subscribers:i}),this.addChild(Edge,"body"),this.body.factory=[],this.heads=this.findAll("thead,tfoot")}add(t){this.body.self.appendChild(t.self),this.body.subscribers.push(t),this.root.ioByState(this.root.state.mode)}render(){this.heads.forEach(t=>{t.dataset.state===this.root.state.mode&&0<this.body.subscribers.length&&t.classList[this.body.subscribers.length?"remove":"add"]("d-none")}),this.body.self.innerHTML="",this.notify(this.body.subscribers.length),this.body.subscribers.forEach(t=>{t.render(),this.body.self.appendChild(t.self)})}clear(){this.body.self.innerText=""}}class DynamicTableRow extends DynamicComponent{constructor({name:t,subscribers:s,template:e,root:i,tag:r="tr",self:o,classes:a}){super({self:o,name:t,subscribers:s,template:e,root:i,tag:r,classes:a}),this._defineIOs()}_defineIOs(){this.IOs={},this.findAll(`[data-el*="${name}."]`).forEach(e=>{let t=e.dataset.el.split(".")[1];if(t.match(/(^(in|out)[A-Z].*|^checkbox$)/)){let s;t.match(/checkbox/)?s="checked":t.match(/^out.*/)?s="innerHTML":t.match(/^in.*/)&&(s="value"),this.IOs[t]={set value(t){e[s]=t},get value(){return e[s]}}}})}}class SearchBar extends StaticComponent{constructor({self:t,name:s,root:e,subscribers:i,api:r}){super({self:t,name:s,root:e,subscribers:i}),this.state.api=r,this.take=t=>{console.log(t)},this.addChild(Input,"input").take=t=>{t[0]!==this.input.value?this.input.self.setAttribute("list",this.find("datalist").id):this.input.self.removeAttribute("list")},this.input.self.addEventListener("input",t=>{this.input.notify(t.target.value.toUpperCase())}),this.input.self.addEventListener("keydown",t=>{"Enter"===t.key&&(t.preventDefault(),this.select())}),this.addChild(Button,"selectButton").take=t=>{let s;s=t[0]?.[0]?.toLowerCase()===this.input.value|this.results.right_ticker?"remove":"add",this.selectButton.self.classList[s]("d-none")},this.selectButton.click(()=>{this.select()}),this.addChild(InputResults,"results").input=this.input,this.results.take=t=>{this.results.fetchResults(this.state.api+"/search?pattern="+t)},this.results.subscribers.push(this.input),this.results.subscribers.push(this.selectButton),this.input.subscribers.push(this.results)}async select(){this.results.lastResult===this.input.value|this.results.right_ticker&&(fetch(this.state.api+"/tickers/"+this.input.value.toUpperCase()).then(t=>t.json()).then(t=>{this.root.container.addAsset({ticker:t.ticker,name:t.name}),this.input.clear(),this.results.clear()}),this.selectButton.self.classList.add("d-none"))}}class Input extends Edge{constructor({self:t,mode:s,root:e,subscribers:i,caseSensitive:r=!1}){if(super({self:t,mode:s,root:e,subscribers:i}),!this.self.constructor===HTMLInputElement)throw"BindError: Input edge not defined";this.caseSensitive=r}get value(){return this.caseSensitive?this.self.value:this.self.value.toLowerCase()}set value(t){this.self.value=this.caseSensitive?t:String(t).toLowerCase()}clear(){this.value=""}take(t){this.value=t}}class Output extends Edge{constructor({self:t,mode:s,root:e,subscribers:i}){super({self:t,mode:s,root:e,subscribers:i})}set value(t){this.self.innerHTML=t}get value(){return this.self.innerHTML}clear(){this.self.innerHTML=""}take(t){this.value=t}}class InputResults extends Edge{get lastResult(){return this.self.options[0]?.value?.toLowerCase()}async request(t){let s=await fetch(t);return s.json()}async fetchResults(t,s){this.clear(),this.request(t).then(t=>{this.right_ticker=t.right_ticker,this.set(t.tickers)})}add(t,s){this.self.insertAdjacentHTML("beforeend",`<option value="${t}">${s||""}</option>`)}set(t){t=Object.entries(t).filter(t=>!this.root.container.exist(t[0])),this.resultList=Object.entries(t),t.forEach(t=>{this.add(t[0],t[1])}),this.notify(t)}clear(){this.self.innerHTML=""}}class Button extends StaticComponent{constructor({self:t,mode:s,root:e,subscribers:i}){super({self:t,mode:s,root:e,subscribers:i}),this.state.blocked=!1}get blocked(){return this.state.blocked}set blocked(t){this.state.blocked=t;let s;s=t?"add":"remove",this.self.classList[s]("blocked")}click(t){return this.self.addEventListener("click",()=>{this.blocked||this.root.state.blocked||t()}),this}}class Checkbox extends Edge{constructor({self:t,mode:s,root:e,subscribers:i}){super({self:t,mode:s,root:e,subscribers:i}),this.self.addEventListener("click",()=>{this.notify(this.value)})}set value(t){this.self.checked=t}get value(){return this.self.checked}set disabled(t){this.self.disabled=t}take(t){this.value=t}}class PseudoTable extends StaticTable{}export{Edge,StaticComponent,DynamicComponent,StaticTable,DynamicTableRow,SearchBar,Input,Output,InputResults,Button,Checkbox};